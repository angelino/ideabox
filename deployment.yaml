apiVersion: v1
kind: Namespace
metadata:
  name: ideabox
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ideabox-config
  namespace: ideabox
data:
  # property-like keys; each key maps to a simple value
  DATABASE_CONNECTION_URI: "jdbc:h2:/usr/local/ideabox/data/ideabox-db"
  #DATABASE_CONNECTION_URI: "jdbc:postgresql://db/"
  #?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
  DATABASE_USER: "ideabox"
  DATABASE_PASSWORD: "ideabox"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ideabox-data-pvc
  namespace: ideabox
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ideabox-deployment
  namespace: ideabox
  labels:
    app: ideabox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ideabox
  template:
    metadata:
      labels:
        app: ideabox
    spec:
      containers:
        - name: ideabox
          # Building images to in-cluster container runtime (minikube)
          # $ minikube image build -t ideabox .
          image: ideabox:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: ideabox-data
              mountPath: /usr/local/ideabox/data
          env:
            - name: DATABASE_CONNECTION_URI
              valueFrom:
                configMapKeyRef:
                  name: ideabox-config
                  key: DATABASE_CONNECTION_URI
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: ideabox-config
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: ideabox-config
                  key: DATABASE_PASSWORD
          ports:
            - containerPort: 3000

      volumes:
        - name: ideabox-data
          persistentVolumeClaim:
            claimName: ideabox-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ideabox-service
  namespace: ideabox
  labels:
    app: ideabox-app
spec:
  type: NodePort
  selector:
    app: ideabox
  ports:
    - name: web
      protocol: TCP
      port: 3000 # Port on which the service will be exposed inside the cluster
      targetPort: 3000 # Port on which the pod/container is running
      nodePort: 31001 # Port on which the service will be accessed externally
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ideabox-app
  namespace: ideabox
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: ideabox-app
  endpoints:
    - port: web
